-- Created by Vertabelo (http://vertabelo.com)
-- Last modification date: 2024-07-07 21:49:46.87
CREATE DATABASE DB1_FULBITO;
USE DB1_FULBITO;
-- tables
-- Table: CLIENTE
CREATE TABLE CLIENTE (
    IDCLI int  NOT NULL AUTO_INCREMENT COMMENT 'IDENTIFICADOR DE CLIENTE',
    NOMCLI nvarchar(150)  NOT NULL COMMENT 'NOMBRE DE CLIENTE',
    APECLI nvarchar(150)  NOT NULL COMMENT 'APELLIDO DE CLIENTE',
    NUMDOCCLI nvarchar(20)  NOT NULL COMMENT 'NUMERO DE DOCUMENTO DE CLIENTE',
    TELCLI char(9)  NOT NULL COMMENT 'TELEFONO DEL CLIENTE',
    EMACLI nvarchar(150)  NOT NULL COMMENT 'EMAIL DEL CLIENTE',
    IDTIPDOC int  NOT NULL COMMENT 'IDENTIFICADOR DEL TIPO DE DOCUMENTO ',
    CODUBI char(6)  NOT NULL COMMENT 'CODIGO UBIGEO',
    CONSTRAINT CLIENTE_pk PRIMARY KEY (IDCLI)
);

-- Table: DISPONIBILIDAD_ESPACIO
CREATE TABLE DISPONIBILIDAD_ESPACIO (
    IDDISESP int  NOT NULL AUTO_INCREMENT COMMENT 'IDENTIFICADOR DE LA DISPONIBILIDAD DE ESPACIO DEPORTIVO',
    FECHORINCDISESP datetime  NOT NULL COMMENT 'FECHA Y HORA INICIO DE LA DISPONIBILIDAD DE ESPACIO DEPORTIVO',
    FECHORFINDISESP datetime  NOT NULL COMMENT 'FECHA Y HORA DE FIN DE LA DISPONIBILIDAD DE ESPACIO DEPORTIVO',
    IDESPDEP int  NOT NULL,
    CONSTRAINT DISPONIBILIDAD_ESPACIO_pk PRIMARY KEY (IDDISESP)
);

-- Table: ESPACIO_DEPORTIVO
CREATE TABLE ESPACIO_DEPORTIVO (
    IDESPDEP int  NOT NULL AUTO_INCREMENT COMMENT 'IDENTIFICADOR DEL ESPACIO DEPORTIVO',
    DISESPDEP bool  NOT NULL COMMENT 'DISPONIBILIDAD ESPACIO DEPORTIVO',
    NUMESPDEP int  NOT NULL COMMENT 'NUMERO ESPACIO DEPORTIVO',
    ACCESPDEP nvarchar(300)  NOT NULL COMMENT 'ACCESORIOS ESPACIO DEPORTIVO',
    CONSTRAINT ESPACIO_DEPORTIVO_pk PRIMARY KEY (IDESPDEP)
);

-- Table: RESERVA
CREATE TABLE RESERVA (
    IDRES int  NOT NULL AUTO_INCREMENT COMMENT 'IDENTIFICADOR DE LA RESERVA',
    CODRES int UNIQUE COMMENT 'CODIGO DE RESERVA',
    ESTPAGRES char(1)  NOT NULL COMMENT 'ESTADO PAGO RESERVA',
    PRERES decimal(10,2)  NOT NULL COMMENT 'PRECIO RESERVA',
    FECHORINCRES datetime  NOT NULL COMMENT 'FECHA HORA DEL INICIO DE LA RESERVA',
    FECHORFINRES datetime  NOT NULL COMMENT 'FECHA HORA DEL FIN DE LA RESERVA',
    DURRES int  NOT NULL COMMENT 'DURACION DE LA RESERVA',
    TIPDEPRES int  NOT NULL COMMENT 'TIPO DEPORTE DE LA RESERVA',
    IDCLI int  NOT NULL COMMENT 'ID DEL CLIENTE',
    IDTRA int  NOT NULL COMMENT 'ID DEL TRABAJADOR',
    IDESPDEP int  NOT NULL,
    CONSTRAINT RESERVA_pk PRIMARY KEY (IDRES)
);


-- Table: TIPO_DOCUMENTO
CREATE TABLE TIPO_DOCUMENTO (
    IDTIPDOC int  NOT NULL AUTO_INCREMENT COMMENT 'ID TIPO DE DOCUMENTO',
    NOMTIPDOC nvarchar(150)  NOT NULL COMMENT 'NOMBRE DE DOCUMENTO',
    CONSTRAINT IDTIPDOC PRIMARY KEY (IDTIPDOC)
);

-- Table: TRABAJADOR
CREATE TABLE TRABAJADOR (
    IDTRA int  NOT NULL AUTO_INCREMENT COMMENT 'IDENTIFICADOR DEL TRABAJADOR',
    NOMTRA nvarchar(150)  NOT NULL COMMENT 'NOMBRE DEL TRABAJADOR',
    APETRA nvarchar(150)  NOT NULL COMMENT 'APELLIDO DEL TRABAJADOR',
    NUMDOCTRA nvarchar(50)  NOT NULL COMMENT 'NUMERO DE DOCUMENTO DEL TRABAJADOR',
    TELTRA char(9)  NOT NULL COMMENT 'TELEFONO DEL TRABAJADOR',
    EMATRA nvarchar(150)  NULL COMMENT 'EMAIL DEL TRABAJADOR',
    IDTIPDOC int  NOT NULL COMMENT 'IDENTIFICADOR DEL TIPO DE DOCUMENTO',
    CODUBI char(6)  NOT NULL COMMENT 'CODIGO DE UBIGEO',
    CONSTRAINT TRABAJADOR_pk PRIMARY KEY (IDTRA)
);

-- Table: UBIGEO
CREATE TABLE UBIGEO (
    CODUBI char(6)  NOT NULL COMMENT 'CODIGO DE UBIGEO',
    DEPUBI nvarchar(150)  NOT NULL COMMENT 'DEPARTAMENTO UBIGEO',
    PROUBI nvarchar(150)  NOT NULL COMMENT 'PROVINCIA UBIGEO',
    DISUBI nvarchar(150)  NOT NULL COMMENT 'DISTRITO UBIGEO',
    CONSTRAINT UBIGEO_pk PRIMARY KEY (CODUBI)
);

-- foreign keys
-- Reference: APODERADO_TIPO_DOCUMENTO (table: CLIENTE)
ALTER TABLE CLIENTE ADD CONSTRAINT APODERADO_TIPO_DOCUMENTO FOREIGN KEY APODERADO_TIPO_DOCUMENTO (IDTIPDOC)
    REFERENCES TIPO_DOCUMENTO (IDTIPDOC);

-- Reference: APODERADO_UBIGEO (table: CLIENTE)
ALTER TABLE CLIENTE ADD CONSTRAINT APODERADO_UBIGEO FOREIGN KEY APODERADO_UBIGEO (CODUBI)
    REFERENCES UBIGEO (CODUBI);

-- Reference: DISPONIBILIDAD_ESPACIO_ESPACIO_DEPORTIVO (table: DISPONIBILIDAD_ESPACIO)
ALTER TABLE DISPONIBILIDAD_ESPACIO ADD CONSTRAINT DISPONIBILIDAD_ESPACIO_ESPACIO_DEPORTIVO FOREIGN KEY DISPONIBILIDAD_ESPACIO_ESPACIO_DEPORTIVO (IDESPDEP)
    REFERENCES ESPACIO_DEPORTIVO (IDESPDEP);

-- Reference: ESTUDIANTE_TIPO_DOCUMENTO (table: TRABAJADOR)
ALTER TABLE TRABAJADOR ADD CONSTRAINT ESTUDIANTE_TIPO_DOCUMENTO FOREIGN KEY ESTUDIANTE_TIPO_DOCUMENTO (IDTIPDOC)
    REFERENCES TIPO_DOCUMENTO (IDTIPDOC);

-- Reference: ESTUDIANTE_UBIGEO (table: TRABAJADOR)
ALTER TABLE TRABAJADOR ADD CONSTRAINT ESTUDIANTE_UBIGEO FOREIGN KEY ESTUDIANTE_UBIGEO (CODUBI)
    REFERENCES UBIGEO (CODUBI);

-- Reference: RESERVA_CLIENTE (table: RESERVA)
ALTER TABLE RESERVA ADD CONSTRAINT RESERVA_CLIENTE FOREIGN KEY RESERVA_CLIENTE (IDCLI)
    REFERENCES CLIENTE (IDCLI);

-- Reference: RESERVA_ESPACIO_DEPORTIVO (table: RESERVA)
ALTER TABLE RESERVA ADD CONSTRAINT RESERVA_ESPACIO_DEPORTIVO FOREIGN KEY RESERVA_ESPACIO_DEPORTIVO (IDESPDEP)
    REFERENCES ESPACIO_DEPORTIVO (IDESPDEP);

-- Reference: RESERVA_TRABAJADOR (table: RESERVA)
ALTER TABLE RESERVA ADD CONSTRAINT RESERVA_TRABAJADOR FOREIGN KEY RESERVA_TRABAJADOR (IDTRA)
    REFERENCES TRABAJADOR (IDTRA);

-- End of file.

-- INSERT DATA

INSERT INTO TIPO_DOCUMENTO (NOMTIPDOC) VALUES 
('DNI'),
('Pasaporte');

INSERT INTO UBIGEO (CODUBI, DEPUBI, PROUBI, DISUBI) VALUES 
('010101', 'Lima', 'Lima', 'Miraflores'),
('110101', 'Lima', 'Lima', 'San Isidro'),
('020202', 'Cusco', 'Cusco', 'Cusco'),
('120202', 'Cusco', 'Cusco', 'Wanchaq'),
('130303', 'Arequipa', 'Arequipa', 'Yanahuara'),
('140404', 'Trujillo', 'Trujillo', 'Huanchaco'),
('150505', 'Chiclayo', 'Chiclayo', 'Jose Leonardo Ortiz'),
('160606', 'Piura', 'Piura', 'Castilla'),
('170707', 'Iquitos', 'Maynas', 'Punchana'),
('180808', 'Tacna', 'Tacna', 'Alto de la Alianza'),
('190909', 'Pucallpa', 'Coronel Portillo', 'Yarinacocha'),
('200101', 'Huancayo', 'Huancayo', 'El Tambo');

INSERT INTO CLIENTE (NOMCLI, APECLI, NUMDOCCLI, TELCLI, EMACLI, IDTIPDOC, CODUBI) VALUES
('Luis', 'Ramirez', '11111111', '900000001', 'luis.ramirez@example.com', 1, '010101'),
('Carlos', 'Sanchez', '22222222', '900000002', 'carlos.sanchez@example.com', 1, '010101'),
('Ana', 'Gonzalez', '33333333', '900000003', 'ana.gonzalez@example.com', 1, '020202'),
('Maria', 'Rodriguez', '44444444', '900000004', 'maria.rodriguez@example.com', 1, '020202'),
('Jose', 'Fernandez', '55555555', '900000005', 'jose.fernandez@example.com', 2, '010101'),
('Laura', 'Martinez', '66666666', '900000006', 'laura.martinez@example.com', 2, '010101'),
('David', 'Lopez', '77777777', '900000007', 'david.lopez@example.com', 2, '020202'),
('Julia', 'Perez', '88888888', '900000008', 'julia.perez@example.com', 2, '020202'),
('Miguel', 'Torres', '99999999', '900000009', 'miguel.torres@example.com', 1, '010101'),
('Sofia', 'Vargas', '10101010', '900000010', 'sofia.vargas@example.com', 1, '020202');

INSERT INTO TRABAJADOR (NOMTRA, APETRA, NUMDOCTRA, TELTRA, EMATRA, IDTIPDOC, CODUBI) VALUES
('Carlos', 'Gomez', '56789012', '923456789', 'carlos.gomez@example.com', 1, '010101'),
('Ana', 'Martinez', '21098765', '934567890', 'ana.martinez@example.com', 2, '020202'),
('Pedro', 'Martinez', '32165498', '987654321', 'pedro.martinez@example.com', 1, '010101'),
('Carla', 'Lopez', '65478921', '912345678', 'carla.lopez@example.com', 2, '020202'),
('Miguel', 'Vargas', '98765432', '923456789', 'miguel.vargas@example.com', 1, '020202'),
('Elena', 'Rios', '45698712', '934567890', 'elena.rios@example.com', 2, '020202'),
('Fernando', 'Castro', '32178965', '945678123', 'fernando.castro@example.com', 1, '020202'),
('Patricia', 'Navarro', '98732145', '956789234', 'patricia.navarro@example.com', 2, '020202'),
('Gabriel', 'Garcia', '65432198', '967890345', 'gabriel.garcia@example.com', 1, '020202'),
('Natalia', 'Mendoza', '78912345', '978901456', 'natalia.mendoza@example.com', 2, '020202'),
('Antonio', 'Serrano', '45632189', '989012567', 'antonio.serrano@example.com', 1, '020202'),
('Adriana', 'Cruz', '32165478', '990123678', 'adriana.cruz@example.com', 2, '020202');

INSERT INTO ESPACIO_DEPORTIVO (DISESPDEP, NUMESPDEP, ACCESPDEP) VALUES
(1, 1, 'Pelotas, Redes'),
(1, 2, 'Pesas, Colchonetas'),
(1, 3, 'Canastas, Balones');

INSERT INTO DISPONIBILIDAD_ESPACIO (FECHORINCDISESP, FECHORFINDISESP, IDESPDEP) VALUES 
('2024-07-08 08:00:00', '2024-07-08 10:00:00', 1),
('2024-07-08 10:00:00', '2024-07-08 12:00:00', 2),
('2024-07-08 12:00:00', '2024-07-08 14:00:00', 3);

INSERT INTO RESERVA (CODRES, ESTPAGRES, PRERES, FECHORINCRES, FECHORFINRES, DURRES, TIPDEPRES, IDCLI, IDTRA, IDESPDEP)
VALUES 
(100001, 'P', 50.00, '2024-07-10 10:00:00', '2024-07-10 11:30:00', TIMESTAMPDIFF(MINUTE, '2024-07-10 10:00:00', '2024-07-10 11:30:00'), 1, 1, 1, 1),
(100002, 'P', 40.00, '2024-07-11 12:00:00', '2024-07-11 13:00:00', TIMESTAMPDIFF(MINUTE, '2024-07-11 12:00:00', '2024-07-11 13:00:00'), 2, 2, 2, 2),
(100003, 'P', 60.00, '2024-07-12 14:00:00', '2024-07-12 15:45:00', TIMESTAMPDIFF(MINUTE, '2024-07-12 14:00:00', '2024-07-12 15:45:00'), 1, 3, 3, 3),
(100004, 'P', 70.00, '2024-07-20 10:00:00', '2024-07-20 11:30:00', TIMESTAMPDIFF(MINUTE, '2024-07-20 10:00:00', '2024-07-20 11:30:00'), 2, 3, 3, 2),
(100005, 'P', 60.00, '2024-07-21 09:00:00', '2024-07-21 10:30:00', TIMESTAMPDIFF(MINUTE, '2024-07-21 09:00:00', '2024-07-21 10:30:00'), 1, 4, 5, 1),
(100006, 'P', 70.00, '2024-07-22 13:00:00', '2024-07-22 14:30:00', TIMESTAMPDIFF(MINUTE, '2024-07-22 13:00:00', '2024-07-22 14:30:00'), 2, 6, 7, 2),
(100007, 'P', 55.00, '2024-07-23 15:00:00', '2024-07-23 16:30:00', TIMESTAMPDIFF(MINUTE, '2024-07-23 15:00:00', '2024-07-23 16:30:00'), 1, 8, 9, 3),
(100008, 'P', 80.00, '2024-07-24 10:00:00', '2024-07-24 11:30:00', TIMESTAMPDIFF(MINUTE, '2024-07-24 10:00:00', '2024-07-24 11:30:00'), 2, 10, 11, 1),
(100009, 'P', 65.00, '2024-07-25 14:00:00', '2024-07-25 15:30:00', TIMESTAMPDIFF(MINUTE, '2024-07-25 14:00:00', '2024-07-25 15:30:00'), 1, 2, 3, 2),
(100010, 'P', 75.00, '2024-07-26 11:00:00', '2024-07-26 12:30:00', TIMESTAMPDIFF(MINUTE, '2024-07-26 11:00:00', '2024-07-26 12:30:00'), 2, 4, 5, 3);

-- VISTA RESERVAS PARA JASPERT
CREATE VIEW VistaReservas AS
SELECT 
    r.IDRES,
    r.CODRES,
    c.NOMCLI AS NombreCliente,
    t.NOMTRA AS NombreTrabajador,
    CASE 
        WHEN r.TIPDEPRES = 1 THEN 'Fútbol'
        WHEN r.TIPDEPRES = 2 THEN 'Vóley'
        ELSE 'Otro'
    END AS Deporte,
    CASE 
        WHEN r.ESTPAGRES = 'P' THEN 'PAGADO'
        WHEN r.ESTPAGRES = 'N' THEN 'NO PAGO'
    END AS EstadoPago,
    r.PRERES AS PrecioReserva,
    r.FECHORINCRES AS FechaHoraInicioReserva,
    r.FECHORFINRES AS FechaHoraFinReserva,
    r.DURRES AS DuracionReserva,
    e.NUMESPDEP AS NumeroEspacioDeportivo
FROM 
    RESERVA r
INNER JOIN 
    CLIENTE c ON r.IDCLI = c.IDCLI
INNER JOIN 
    TRABAJADOR t ON r.IDTRA = t.IDTRA
INNER JOIN 
    ESPACIO_DEPORTIVO e ON r.IDESPDEP = e.IDESPDEP;

-- SELECT * FROM VistaReservas;
-- SELECT CON ORDER BY PARA JASPERT REPORT
SELECT 
    CODRES,
    NombreCliente,
    NombreTrabajador,
    Deporte,
    EstadoPago,
    PrecioReserva,
    FechaHoraInicioReserva,
    FechaHoraFinReserva,
    DuracionReserva,
    NumeroEspacioDeportivo
FROM 
    DB1_FULBITO.VistaReservas
ORDER BY 
    CODRES ASC;

-- DROP VIEW IF EXISTS VistaReservas;

-- CREAR EL PROCEDIMIENTO INSERTAR RESERVA
DELIMITER //

CREATE PROCEDURE InsertarReserva(
    IN p_ESTPAGRES CHAR(1),
    IN p_PRERES DECIMAL(10, 2),
    IN p_FECHORINCRES DATETIME,
    IN p_FECHORFINRES DATETIME,
    IN p_TIPDEPRES INT,
    IN p_IDCLI INT,
    IN p_IDTRA INT,
    IN p_IDESPDEP INT
)
BEGIN
    DECLARE v_DURRES INT;
    DECLARE v_CODRES INT;
    
    -- Calcular la duración de la reserva en minutos
    SET v_DURRES = TIMESTAMPDIFF(MINUTE, p_FECHORINCRES, p_FECHORFINRES);
    
    -- Obtener el siguiente valor para CODRES
    SET v_CODRES = COALESCE((SELECT MAX(CODRES) + 1 FROM RESERVA), 1);
    
    -- Formatear CODRES como un valor con relleno a la izquierda hasta 6 dígitos que comience desde 100000
    SET v_CODRES = LPAD(v_CODRES, 6, '100000');
    
    INSERT INTO RESERVA (CODRES, ESTPAGRES, PRERES, FECHORINCRES, FECHORFINRES, DURRES, TIPDEPRES, IDCLI, IDTRA, IDESPDEP)
    VALUES (v_CODRES, p_ESTPAGRES, p_PRERES, p_FECHORINCRES, p_FECHORFINRES, v_DURRES, p_TIPDEPRES, p_IDCLI, p_IDTRA, p_IDESPDEP);
END//

DELIMITER ;

-- LLAMAR AL PROCEDIMIENTO
CALL InsertarReserva('P', 11.00, '2024-07-20 10:00:00', '2024-07-20 11:30:00', 2, 3, 3, 2);
-- DROP PROCEDURE IF EXISTS InsertarReserva;


-- SELECT DE RESERVAS POR RANGO DE FECHAS
SELECT * FROM RESERVA 
WHERE FECHORINCRES BETWEEN '2024-07-01 00:00:00' AND '2024-07-11 23:59:59';

-- CONSULTA DE CLIENTE CON SUS RESERVAS UTILIZANDO JOIN
SELECT C.NOMCLI AS NOMBRE_CLIENTE, C.APECLI, R.CODRES, R.FECHORINCRES, R.FECHORFINRES
FROM CLIENTE C
JOIN RESERVA R ON C.IDCLI = R.IDCLI;

-- RESERVAS POR CADA CLIENTE UTILIZANDO GROUP BY
SELECT IDCLI, COUNT(*) AS CONTEO_RESERVAS
FROM RESERVA
GROUP BY IDCLI;

-- SUMA TOTAL DE PRECIOS POT CADA DEPORTE EN RESERVAS CON GROUP BY
SELECT 
    CASE 
        WHEN TIPDEPRES = 1 THEN 'Fútbol'
        WHEN TIPDEPRES = 2 THEN 'Voley'
    END AS TIPO_DEPORTE, 
    SUM(PRERES) AS TOTAL_PRECIO
FROM RESERVA
GROUP BY TIPDEPRES;

-- Vista de Disponibilidad de Espacios Deportivos
CREATE VIEW VistaHorasNoDisponibles_EspacioDeportivo_1 AS
SELECT 
    r.FECHORINCRES AS FechaHoraInicioReserva,
    r.FECHORFINRES AS FechaHoraFinReserva,
    e.NUMESPDEP AS NumeroEspacio
FROM 
    RESERVA r
INNER JOIN 
    ESPACIO_DEPORTIVO e ON r.IDESPDEP = e.IDESPDEP
WHERE 
    r.IDESPDEP = 1;
    
    
SELECT * FROM VistaHorasNoDisponibles_EspacioDeportivo_1;

-- DROP VIEW IF EXISTS VistaHorasNoDisponibles_EspacioDeportivo_1;

-- DROP DATABASE DB1_FULBITO;
